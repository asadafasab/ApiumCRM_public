# Generated by Django 4.1.6 on 2023-02-23 07:52

import datetime
import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Contract",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.TextField()),
                (
                    "nip",
                    models.BigIntegerField(
                        validators=[
                            django.core.validators.MaxValueValidator(9999999999),
                            django.core.validators.MinValueValidator(1111111111),
                        ]
                    ),
                ),
                ("contract_number", models.TextField(max_length=256, unique=True)),
                ("owner", models.TextField(blank=True)),
                ("contact_person", models.TextField(blank=True)),
                ("address", models.TextField(blank=True)),
                ("phone_number", models.TextField(blank=True)),
                ("email", models.TextField(blank=True, max_length=512, null=True)),
                ("salesman", models.TextField(blank=True, max_length=512)),
                ("volume", models.TextField(blank=True, max_length=512)),
                ("date_signed", models.DateField(blank=True, null=True)),
                ("date_begin", models.DateField(blank=True, null=True)),
                ("date_end", models.DateField(blank=True, null=True)),
                ("status", models.TextField(blank=True, null=True)),
                ("ppe_number", models.TextField(blank=True, null=True)),
                ("price", models.TextField(blank=True)),
                ("to_annex", models.TextField(blank=True, max_length=32)),
                ("info", models.TextField(blank=True)),
                ("medium", models.TextField(blank=True, max_length=32)),
                ("branch", models.TextField(blank=True, max_length=512)),
            ],
        ),
        migrations.CreateModel(
            name="ContractToFix",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("is_done", models.BooleanField(default=False)),
                ("salesman", models.TextField()),
                (
                    "branch",
                    models.CharField(
                        choices=[
                            ("KA", "Katowice"),
                            ("LO", "Łódź"),
                            ("PO", "Poznań"),
                            ("BY", "Bydgoszcz"),
                            ("SZ", "Szczecin"),
                            ("LU", "Lublin"),
                            ("GD", "Gdynia"),
                            ("WR", "Wrocław"),
                        ],
                        max_length=2,
                    ),
                ),
                ("name", models.TextField(blank=True, null=True)),
                ("date_signed", models.DateField(blank=True, null=True)),
                (
                    "nip",
                    models.BigIntegerField(
                        validators=[
                            django.core.validators.MaxValueValidator(9999999999),
                            django.core.validators.MinValueValidator(1111111111),
                        ]
                    ),
                ),
                ("secretary", models.TextField(blank=True, null=True)),
                ("info", models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name="ErrorLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("message", models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name="Nip",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "nip",
                    models.BigIntegerField(
                        validators=[
                            django.core.validators.MaxValueValidator(9999999999),
                            django.core.validators.MinValueValidator(1111111111),
                        ]
                    ),
                ),
                ("takeover", models.BooleanField(default=True)),
                (
                    "blocade_end",
                    models.DateTimeField(default=datetime.datetime(3000, 1, 1, 0, 0)),
                ),
                ("client_of", models.TextField(max_length=512)),
                ("blocked_by", models.TextField(blank=True, max_length=512)),
                ("company_name", models.TextField(max_length=512)),
            ],
        ),
        migrations.CreateModel(
            name="NotificationContact",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("contact", models.TextField()),
                ("is_email", models.BooleanField(default=True)),
            ],
        ),
    ]
